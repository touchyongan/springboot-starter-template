plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}

group = 'io.touchyongan'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

checkstyle {
	toolVersion = '10.17.0'
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
	configProperties = [
			'suppressionsFile': file("${rootDir}/config/checkstyle/suppressions.xml").absolutePath
	]
	// Optional: Configure reports
	showViolations = true // Display violations in console
	ignoreFailures = false // Fail build on violations
}

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = '1.6.3'
	jjwtVersion = '0.12.5'
	apacheCommonVersion = '4.5.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	implementation "org.apache.commons:commons-collections4:${apacheCommonVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.bootJar {
	archiveFileName.set("api-app.jar")
}
